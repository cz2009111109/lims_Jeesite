<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.reprot.dao.FsExtractionDetectionReportDao">
    
	<sql id="fsExtractionDetectionReportColumns">
		a.id AS "id",
		a.number AS "number",
		a.customer AS "customer",
		a.project AS "project.id",
		a.subproject AS "subproject.id",
		a.chief_officer AS "chiefOfficer.id",
		a.lab_officer AS "labOfficer.id",
		a.infomation_officer AS "infomationOfficer.id",
		a.extraction_detection AS "extractionDetection.id",
		a.receive_user AS "receiveUser.id",
		a.receive_time AS "receiveTime",
		a.sampling_state AS "samplingState",
		a.receive_state AS "receiveState",
		a.auditor AS "auditor.id",
		a.audit_time AS "auditTime",
		a.detection_solution AS "detectionSolution",
		a.detection_type AS "detectionType",
		a.tubes AS "tubes",
		a.sample_type AS "sampleType",
		a.sample_number AS "sampleNumber",
		a.passnumber AS "passnumber",
		a.risknumber AS "risknumber",
		a.failnumber AS "failnumber",
		a.information_coincide AS "informationCoincide",
		a.file AS "file",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		u6.name AS "chiefOfficer.name",
		u7.name AS "labOfficer.name",
		u8.name AS "infomationOfficer.name",
		u10.name AS "receiveUser.name"
	</sql>
	
	<sql id="fsExtractionDetectionReportJoins">
		LEFT JOIN sys_user u6 ON u6.id = a.chief_officer
		LEFT JOIN sys_user u7 ON u7.id = a.lab_officer
		LEFT JOIN sys_user u8 ON u8.id = a.infomation_officer
		LEFT JOIN sys_user u10 ON u10.id = a.receive_user
	</sql>
    
	<select id="get" resultType="FsExtractionDetectionReport">
		SELECT 
			<include refid="fsExtractionDetectionReportColumns"/>
		FROM fs_extraction_detection_report a
		<include refid="fsExtractionDetectionReportJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="FsExtractionDetectionReport">
		SELECT 
			<include refid="fsExtractionDetectionReportColumns"/>
		FROM fs_extraction_detection_report a
		<include refid="fsExtractionDetectionReportJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="FsExtractionDetectionReport">
		SELECT 
			<include refid="fsExtractionDetectionReportColumns"/>
		FROM fs_extraction_detection_report a
		<include refid="fsExtractionDetectionReportJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO fs_extraction_detection_report(
			id,
			number,
			customer,
			project,
			subproject,
			chief_officer,
			lab_officer,
			infomation_officer,
			extraction_detection,
			receive_user,
			receive_time,
			sampling_state,
			receive_state,
			auditor,
			audit_time,
			detection_solution,
			detection_type,
			tubes,
			sample_type,
			sample_number,
			passnumber,
			risknumber,
			failnumber,
			information_coincide,
			file,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{number},
			#{customer},
			#{project.id},
			#{subproject.id},
			#{chiefOfficer.id},
			#{labOfficer.id},
			#{infomationOfficer.id},
			#{extractionDetection.id},
			#{receiveUser.id},
			#{receiveTime},
			#{samplingState},
			#{receiveState},
			#{auditor.id},
			#{auditTime},
			#{detectionSolution},
			#{detectionType},
			#{tubes},
			#{sampleType},
			#{sampleNumber},
			#{passnumber},
			#{risknumber},
			#{failnumber},
			#{informationCoincide},
			#{file},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE fs_extraction_detection_report SET 	
			number = #{number},
			customer = #{customer},
			project = #{project.id},
			subproject = #{subproject.id},
			chief_officer = #{chiefOfficer.id},
			lab_officer = #{labOfficer.id},
			infomation_officer = #{infomationOfficer.id},
			extraction_detection = #{extractionDetection.id},
			receive_user = #{receiveUser.id},
			receive_time = #{receiveTime},
			sampling_state = #{samplingState},
			receive_state = #{receiveState},
			auditor = #{auditor.id},
			audit_time = #{auditTime},
			detection_solution = #{detectionSolution},
			detection_type = #{detectionType},
			tubes = #{tubes},
			sample_type = #{sampleType},
			sample_number = #{sampleNumber},
			passnumber = #{passnumber},
			risknumber = #{risknumber},
			failnumber = #{failnumber},
			information_coincide = #{informationCoincide},
			file = #{file},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE fs_extraction_detection_report SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<select id="getMaxid" resultType="long">
		 select coalesce(max(CAST(id as DECIMAL)),0)+1
		FROM fs_extraction_detection_report
	</select>
</mapper>